name: Java DEV CI

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
      - DdCaCf8g-ImproveCiCd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Run tests and generate coverage report
        run: |
          mvn -Dtest.quiet=true -Dmaven.test.redirectTestOutputToFile=true clean test org.jacoco:jacoco-maven-plugin:prepare-agent org.jacoco:jacoco-maven-plugin:report --quiet
          if [ -f target/site/jacoco/jacoco.xml ]; then
            echo "Coverage report generated successfully."
          else
            echo "Coverage report not found. Failing the build."
            exit 1
          fi

      - name: Display test results summary
        run: |
          echo "=== Test Results Summary ==="
          TESTS_RUN=$(grep -oP 'tests="[0-9]*"' target/surefire-reports/TEST-*.xml | head -1 | grep -oP '[0-9]+')
          FAILURES=$(grep -oP 'failures="[0-9]*"' target/surefire-reports/TEST-*.xml | head -1 | grep -oP '[0-9]+')
          ERRORS=$(grep -oP 'errors="[0-9]*"' target/surefire-reports/TEST-*.xml | head -1 | grep -oP '[0-9]+')
          SKIPPED=$(grep -oP 'skipped="[0-9]*"' target/surefire-reports/TEST-*.xml | head -1 | grep -oP '[0-9]+')
          echo "Tests Run: $TESTS_RUN"
          echo "Failures: $FAILURES"
          echo "Errors: $ERRORS"
          echo "Skipped: $SKIPPED"

      - name: Calculate and display coverage
        run: |
          echo "=== Coverage Summary ==="
          MISSED=$(grep -oP '(?<=<counter type="INSTRUCTION" missed=")\d+' target/site/jacoco/jacoco.xml | head -1)
          COVERED=$(grep -oP '(?<=<counter type="INSTRUCTION" covered=")\d+' target/site/jacoco/jacoco.xml | head -1)
          TOTAL=$((MISSED + COVERED))
          COVERAGE=$(awk "BEGIN { printf \"%.2f\", ($COVERED / $TOTAL) * 100 }")
          echo "Instructions Covered: $COVERED"
          echo "Instructions Missed: $MISSED"
          echo "Total Instructions: $TOTAL"
          echo "Coverage: $COVERAGE%"

          # Opcionalmente, adicione cobertura por tipo
          echo -e "\nDetailed Coverage:"
          echo "Type         Missed Covered Coverage"
          echo "--------------------------------"
          for TYPE in INSTRUCTION BRANCH LINE COMPLEXITY METHOD CLASS; do
            MISSED=$(grep -oP "(?<=<counter type=\"$TYPE\" missed=\")\\d+" target/site/jacoco/jacoco.xml | head -1)
            COVERED=$(grep -oP "(?<=<counter type=\"$TYPE\" covered=\")\\d+" target/site/jacoco/jacoco.xml | head -1)
            TOTAL=$((MISSED + COVERED))
            COVERAGE=$(awk "BEGIN { printf \"%.2f\", ($COVERED / $TOTAL) * 100 }")
            printf "%-12s %6d %7d %8.2f%%\n" "$TYPE" "$MISSED" "$COVERED" "$COVERAGE"
          done
