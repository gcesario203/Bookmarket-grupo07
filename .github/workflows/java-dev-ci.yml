name: Java DEV CI

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
      - DdCaCf8g-ImproveCiCd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Run tests and generate coverage report
        run: |
          mvn -Dtest.quiet=true -Dmaven.test.redirectTestOutputToFile=true clean test org.jacoco:jacoco-maven-plugin:prepare-agent org.jacoco:jacoco-maven-plugin:report --quiet
          if [ -f target/site/jacoco/jacoco.xml ]; then
            echo "Coverage report generated successfully."
          else
            echo "Coverage report not found. Failing the build."
            exit 1
          fi

      - name: Display test results summary
        run: |
          echo "=== Test Results Summary ==="
          TESTS_RUN=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -ho 'tests="[0-9]*"' {} \; | grep -o '[0-9]*' | awk '{sum += $1} END {print sum}')
          FAILURES=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -ho 'failures="[0-9]*"' {} \; | grep -o '[0-9]*' | awk '{sum += $1} END {print sum}')
          ERRORS=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -ho 'errors="[0-9]*"' {} \; | grep -o '[0-9]*' | awk '{sum += $1} END {print sum}')
          SKIPPED=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -ho 'skipped="[0-9]*"' {} \; | grep -o '[0-9]*' | awk '{sum += $1} END {print sum}')
          echo "Tests Run: $TESTS_RUN"
          echo "Failures: $FAILURES"
          echo "Errors: $ERRORS"
          echo "Skipped: $SKIPPED"

      - name: Calculate and display coverage
        run: |
          echo "=== Coverage Summary ==="

          # Instalar xmllint se necessário
          sudo apt-get install -y libxml2-utils > /dev/null 2>&1

          echo "Coverage by Package:"
          echo "----------------------------------------"
          echo "Package                     Coverage Line"
          echo "----------------------------------------"

          # Extrair e mostrar informação de cada package
          xmllint --xpath "//package" target/site/jacoco/jacoco.xml | while read -r line; do
            if [[ $line =~ name=\"([^\"]+)\" ]]; then
              package="${BASH_REMATCH[1]}"
              covered=$(xmllint --xpath "//package[@name='$package']//counter[@type='LINE']/@covered" target/site/jacoco/jacoco.xml | grep -o '[0-9]*')
              missed=$(xmllint --xpath "//package[@name='$package']//counter[@type='LINE']/@missed" target/site/jacoco/jacoco.xml | grep -o '[0-9]*')

              if [ -n "$covered" ] && [ -n "$missed" ]; then
                total=$((covered + missed))
                if [ $total -ne 0 ]; then
                  coverage=$(echo "scale=2; ($covered / $total) * 100" | bc)
                  printf "%-25s %8.2f%% (%d/%d)\n" "$package" $coverage $covered $total
                fi
              fi
            fi
          done

          echo -e "\nTotal Project Coverage:"
          echo "----------------------------------------"

          # Extrair cobertura total do projeto
          for type in LINE INSTRUCTION BRANCH METHOD CLASS; do
            covered=$(xmllint --xpath "//counter[@type='$type']/@covered" target/site/jacoco/jacoco.xml | grep -o '[0-9]*' | head -1)
            missed=$(xmllint --xpath "//counter[@type='$type']/@missed" target/site/jacoco/jacoco.xml | grep -o '[0-9]*' | head -1)

            if [ -n "$covered" ] && [ -n "$missed" ]; then
              total=$((covered + missed))
              if [ $total -ne 0 ]; then
                coverage=$(echo "scale=2; ($covered / $total) * 100" | bc)
                case $type in
                  "LINE") echo "Line Coverage: ${coverage}% (${covered}/${total})";;
                  "INSTRUCTION") echo "Instruction Coverage: ${coverage}% (${covered}/${total})";;
                  "BRANCH") echo "Branch Coverage: ${coverage}% (${covered}/${total})";;
                  "METHOD") echo "Method Coverage: ${coverage}% (${covered}/${total})";;
                  "CLASS") echo "Class Coverage: ${coverage}% (${covered}/${total})";;
                esac
              fi
            fi
          done
